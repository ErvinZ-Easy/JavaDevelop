/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientWorkArea;

import Business.Clinical.ClinicalRecord;
import Business.Enterprise.Enterprise;
import Business.HIS;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Reservation.reservationtime;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReservationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cheny
 */
public class ViewReservationHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewReservationHistoryJPanel
     */

     
     JPanel userProcessContainer;
    Enterprise enterprise;
    Organization org;
    UserAccount account;
    HIS system;
    Network network;
    public ViewReservationHistoryJPanel(JPanel userProcessContainer, HIS system, Network network,Enterprise enterprise,Organization org,UserAccount account) {
       initComponents();
        Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screenSize);
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.org=org;
        this.account=account;
        this.system=system;
        this.network=network;
        populateTable();
     }

    
    public void populateTable(){
         // Enterprise eget=(Enterprise)enterpriseJComboBox.getSelectedItem();
   
       
        DefaultTableModel model = (DefaultTableModel) ReservationJTable.getModel();
        model.setRowCount(0);
            
                for(WorkRequest rq: account.getWorkQueue().getWorkRequestList()){
                    
                ReservationWorkRequest rq1=(ReservationWorkRequest)rq;
                reservationtime rt=rq1.getRt();
                           
                
                    Object[] row = new Object[7];
                    row[0] = rt;
                    row[1] = rt.getDoctor();
                    row[2] = rt.getDate();
                    row[3] = rt.getTimePeriod();
                    row[4] = rt.getStatus();
                    row[5] =rq.getSender().getPeople().getName();
                    
                    
                    model.addRow(row);
               
            
    }
            }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReservationJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jLabel4.setText("Hospital:");

        jTextField4.setText("    ");

        setBackground(new java.awt.Color(224, 224, 224));
        setPreferredSize(new java.awt.Dimension(1920, 1080));
        setRequestFocusEnabled(false);

        backJButton.setBackground(new java.awt.Color(224, 224, 224));
        backJButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        ReservationJTable.setBackground(new java.awt.Color(224, 224, 224));
        ReservationJTable.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        ReservationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Hospital", "Doctor", "Date", "TimePeriod", "Status", "PatientName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ReservationJTable.setGridColor(new java.awt.Color(0, 0, 0));
        ReservationJTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        ReservationJTable.setSelectionForeground(new java.awt.Color(255, 255, 0));
        ReservationJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReservationJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ReservationJTable);

        jLabel2.setBackground(new java.awt.Color(224, 224, 224));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Hospital Information System - ViewReservationHistory");

        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jButton1)
                                .addGap(870, 870, 870)
                                .addComponent(backJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(727, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton)
                    .addComponent(jButton1))
                .addContainerGap(457, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void ReservationJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservationJTableMouseClicked
      
    }//GEN-LAST:event_ReservationJTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedrow=ReservationJTable.getSelectedRow();
         
        if(selectedrow>=0){
            reservationtime rt =(reservationtime)ReservationJTable.getValueAt(selectedrow,0);
            if(!rt.getStatus().equals("Accept")){
                rt.setStatus(null);
                rt.setPatientName(null);
                   ReservationWorkRequest rq1=new ReservationWorkRequest();
                    reservationtime rt1;
                  for(WorkRequest rq: account.getWorkQueue().getWorkRequestList()){
                      rq1=(ReservationWorkRequest)rq;
                      if(rq1.getRt()==rt){
                          break;
                      }

                  }
                account.getWorkQueue().getWorkRequestList().remove(rq1);
                JOptionPane.showMessageDialog(null,"cancel succeed"); 
                populateTable();
            }else{
                JOptionPane.showMessageDialog(null,"Can't be cancelled because already accepted");
            }
        }
        else
        {
             JOptionPane.showMessageDialog(null,"select one record to cancel"); 
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ReservationJTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
