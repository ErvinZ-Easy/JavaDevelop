/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientWorkArea;

import Business.Enterprise.Enterprise;
import Business.HIS;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Reservation.reservationtime;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cheny
 */
public class Patientmakereservation extends javax.swing.JPanel {

    
    JPanel userProcessContainer;
    Enterprise enterprise;
    Organization org;
    UserAccount account;
    HIS system;
    Network network;
     Date date;
        String timeperiod;
        Enterprise hospital1;
        String hospitalname;
    public  Patientmakereservation(JPanel userProcessContainer, HIS system, Network network,Enterprise enterprise,Organization org,UserAccount account) {
        initComponents();
        Dimension screenSize =Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screenSize);
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.org=org;
        this.account=account;
        this.system=system;
        this.network=network;
        populateTable();
        populateComboBox();
    }
private void populateComboBox() {
        enterpriseJComboBox.removeAllItems();
        
        for (Network n : system.getNetworkList()) {
            
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if(e.getEnterpriseType()==Enterprise.EnterpriseType.Hospitals) 
                
                enterpriseJComboBox.addItem(e);
                         
            }
            }
            
        }
    public void populateTable(){
         // Enterprise eget=(Enterprise)enterpriseJComboBox.getSelectedItem();
   
       
        DefaultTableModel model = (DefaultTableModel) ReservationJTable.getModel();
        model.setRowCount(0);
            for (Network n : system.getNetworkList()) {
                for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                 
                    for(Organization o: e.getOrganizationDirectory().getOrganizationList()){
                  
                        for (reservationtime rt : o.getRtd().getReservationtimeSet()) {
                            if(rt!=null&&rt.getStatus()==null){
                                Object[] row = new Object[5];
                                row[0] = rt;
                                row[1] = rt.getDoctor();
                                row[2] = rt.getDate();
                                row[3] = rt.getTimePeriod();
                                row[4] = rt.getStatus();

                                model.addRow(row);
                
                            }
                        }
                    }
                }
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        ReservationJTable = new javax.swing.JTable();
        enterpriseJComboBox = new javax.swing.JComboBox();
        backJButton = new javax.swing.JButton();
        MAKEJ = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        DateJDP = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        TimeJCB = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        remarkfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(224, 224, 224));
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        ReservationJTable.setBackground(new java.awt.Color(224, 224, 224));
        ReservationJTable.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        ReservationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Hospital", "Doctor", "Date", "TimePeriod", "Status", "PatientName", "Remark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ReservationJTable.setGridColor(new java.awt.Color(0, 0, 0));
        ReservationJTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        ReservationJTable.setSelectionForeground(new java.awt.Color(255, 255, 0));
        ReservationJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReservationJTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ReservationJTable);

        enterpriseJComboBox.setBackground(new java.awt.Color(224, 224, 224));
        enterpriseJComboBox.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(224, 224, 224));
        backJButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        MAKEJ.setBackground(new java.awt.Color(224, 224, 224));
        MAKEJ.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        MAKEJ.setText("MAKE RESERVATION");
        MAKEJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAKEJActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(224, 224, 224));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Choose Date");

        DateJDP.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        DateJDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateJDPActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(224, 224, 224));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("REMARK:");

        TimeJCB.setBackground(new java.awt.Color(224, 224, 224));
        TimeJCB.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        TimeJCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Morning(9:00-12:00)", "Afternoon(12:00-15:00)", "Afternoon(15:00-18:00)", "All Time Period" }));

        jLabel3.setBackground(new java.awt.Color(224, 224, 224));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Choose Time Period");

        jButton1.setBackground(new java.awt.Color(224, 224, 224));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(224, 224, 224));
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Hospital:");

        remarkfield.setBackground(new java.awt.Color(224, 224, 224));
        remarkfield.setText("     ");

        jLabel5.setBackground(new java.awt.Color(224, 224, 224));
        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setText("Hospital Information System - PatientMakeReservation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(backJButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TimeJCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(DateJDP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(enterpriseJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(remarkfield))))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(MAKEJ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(291, 291, 291)))))
                .addGap(716, 716, 716))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(DateJDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TimeJCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(MAKEJ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel4)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(remarkfield, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(backJButton)
                .addContainerGap(266, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ReservationJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReservationJTableMouseClicked
        // TODO add your handling code here:
        int selectedrow=ReservationJTable.getSelectedRow();
        if(selectedrow>=0){
            reservationtime rt =(reservationtime)ReservationJTable.getValueAt(selectedrow,0);
            Date date=rt.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
            String s = sdf.format(date);

            //  timeJTF.setText(s+" "+rt.getTimePeriod());
            //  patientJTF.setText(rt.getPatientName());
        }
    }//GEN-LAST:event_ReservationJTableMouseClicked

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void MAKEJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAKEJActionPerformed
        // TODO add your handling code here:
        int selectedrow=ReservationJTable.getSelectedRow();
        if(selectedrow>=0){
            reservationtime rt =(reservationtime)ReservationJTable.getValueAt(selectedrow,0);
            String rema=remarkfield.getText();
            rt.setStatus("Pending");
            rt.setRemark(rema);
            Date date=new Date();

            account.getWorkQueue().createReservationworkRequest(account, rt.getDoctor(), "pending", date, null, rt);
            populateTable();
        }
          else{
        JOptionPane.showMessageDialog(null,"please select one row");
        }
    }//GEN-LAST:event_MAKEJActionPerformed

    private void DateJDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateJDPActionPerformed
        // TODO add your handling code here:
        if(DateJDP.getDate().before(new Date())){
            JOptionPane.showMessageDialog(null,"please choose right date(time after today)");
            DateJDP.setDate(null);
        }
    }//GEN-LAST:event_DateJDPActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        date=DateJDP.getDate();
        timeperiod=TimeJCB.getSelectedItem().toString();
        hospital1=(Enterprise)enterpriseJComboBox.getSelectedItem();
        hospitalname=enterpriseJComboBox.getSelectedItem().toString();
        populate2(date,timeperiod,hospitalname);

        }
        public void populate2(Date date, String timeperiod, String hospitalname){

            //System.out.print(hospitalname);
            // UserAccount ua=account;

            DefaultTableModel model = (DefaultTableModel) ReservationJTable.getModel();
            model.setRowCount(0);
            for (Network n : system.getNetworkList()) {
                for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                    //if(e==eget){
                        for(Organization o: e.getOrganizationDirectory().getOrganizationList()){

                            for (reservationtime rt : o.getRtd().getReservationtimeSet()) {
                                //System.out.print("++"+rt.getHospital());
                                if(rt!=null&&rt.getStatus()==null){
                                    if(rt.getHospital().equals(hospitalname)||hospitalname==null){
                                        if(rt.getDate().equals(date)||date==null){
                                            if(rt.getTimePeriod().equals(timeperiod)||timeperiod==null){

                                                Object[] row = new Object[5];
                                                row[0] = rt;
                                                row[1] = rt.getDoctor();
                                                row[2] = rt.getDate();
                                                row[3] = rt.getTimePeriod();
                                                row[4] = rt.getStatus();

                                                model.addRow(row);
                                            }else if(timeperiod.equals("All Time Period")){
                                                Object[] row = new Object[5];
                                                row[0] = rt;
                                                row[1] = rt.getDoctor();
                                                row[2] = rt.getDate();
                                                row[3] = rt.getTimePeriod();
                                                row[4] = rt.getStatus();

                                                model.addRow(row);
                                            }
                                        }}
                                    }
                                    // }
                            }}
                        }
                    }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker DateJDP;
    private javax.swing.JButton MAKEJ;
    private javax.swing.JTable ReservationJTable;
    private javax.swing.JComboBox TimeJCB;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField remarkfield;
    // End of variables declaration//GEN-END:variables
}
